version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # Firebase Configuration
      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
      - VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
      - VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
      - VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
      - VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}
      - VITE_WORLDCOIN_APP_ID=${VITE_WORLDCOIN_APP_ID}
      # Firebase Admin SDK
      - FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
      # Algorand Configuration
      - VITE_APP_WALLET_ADDRESS=${VITE_APP_WALLET_ADDRESS}
      - VITE_ALGORAND_NETWORK=${VITE_ALGORAND_NETWORK}
      - ISSUER_PRIVATE_KEY=${ISSUER_PRIVATE_KEY}
      - ISSUER_REGISTRY_APP_ID=${ISSUER_REGISTRY_APP_ID}
      - ADMIN_MNEMONIC=${ADMIN_MNEMONIC}
      - ADMIN_ADDRESS=${ADMIN_ADDRESS}
      # Google Document AI
      - ID_FRAUD_ENDPOINT=${ID_FRAUD_ENDPOINT}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      # Face Comparison
      - FACE_COMPARISON_PROVIDER=${FACE_COMPARISON_PROVIDER}
      # AWS Configuration
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REKOGNITION_THRESHOLD=${AWS_REKOGNITION_THRESHOLD}
      - AWS_TEXTRACT_CONFIDENCE_THRESHOLD=${AWS_TEXTRACT_CONFIDENCE_THRESHOLD}
      # Security
      - HMAC_SECRET=${HMAC_SECRET}
      - MOBILE_API_KEY=${MOBILE_API_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
    volumes:
      # Mount Google credentials if using a file
      - ./google-credentials.json:/app/google-credentials.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development mode with hot reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      # Same environment variables as production
      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
      - VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
      - VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
      - VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
      - VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}
      - VITE_WORLDCOIN_APP_ID=${VITE_WORLDCOIN_APP_ID}
      - FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
      - VITE_APP_WALLET_ADDRESS=${VITE_APP_WALLET_ADDRESS}
      - VITE_ALGORAND_NETWORK=${VITE_ALGORAND_NETWORK}
      - ISSUER_PRIVATE_KEY=${ISSUER_PRIVATE_KEY}
      - ISSUER_REGISTRY_APP_ID=${ISSUER_REGISTRY_APP_ID}
      - ADMIN_MNEMONIC=${ADMIN_MNEMONIC}
      - ADMIN_ADDRESS=${ADMIN_ADDRESS}
      - ID_FRAUD_ENDPOINT=${ID_FRAUD_ENDPOINT}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - FACE_COMPARISON_PROVIDER=${FACE_COMPARISON_PROVIDER}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REKOGNITION_THRESHOLD=${AWS_REKOGNITION_THRESHOLD}
      - AWS_TEXTRACT_CONFIDENCE_THRESHOLD=${AWS_TEXTRACT_CONFIDENCE_THRESHOLD}
      - HMAC_SECRET=${HMAC_SECRET}
      - MOBILE_API_KEY=${MOBILE_API_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
    volumes:
      - .:/app
      - /app/node_modules
      - ./google-credentials.json:/app/google-credentials.json:ro
    command: npm run dev
    profiles:
      - development
